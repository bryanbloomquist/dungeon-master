{"version":3,"sources":["Firebase.js","AppContext.js","Components/Banner/Banner.js","Components/Button/Button.js","Components/Input/Input.js","Components/Login/Login.js","Components/Login/Confirm/Confirm.js","Components/MainBody/MainBody.js","Components/MainBody/Sidebar/Accordion/DiceRoller/DiceRoller.js","Components/MainBody/Sidebar/Accordion/MonsterInput/MonsterInput.js","Components/MainBody/Sidebar/Accordion/PlayerInput/PlayerInput.js","Components/MainBody/Sidebar/Accordion/Accordion.js","Components/MainBody/Sidebar/Sidebar.js","Components/MainBody/CombatTable/TableRow/TableRow.js","Components/MainBody/CombatTable/CombatTable.js","HOC/Aux.js","Components/Backdrop/Backdrop.js","Components/Modal/ModalContent/MonsterModalContent.js","Components/Modal/ModalContent/InitiativeModalContent.js","Components/Modal/Modal.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","Firebase","firestore","keygen","require","Context","React","createContext","Provider","children","useState","monsterNamesArray","setMonsterNamesArray","monsterStatsArray","setMonsterStatsArray","monsterOptions","setMonsterOptions","createMonsterOptions","arr1","arr2","forEach","el","push","label","name","value","index","useEffect","collection","doc","get","then","tempArr","data","namesArray","monsterData","JSON","parse","groupName","setGroupName","groupExst","setGroupExst","nameEntrd","setNameEntrd","nameVrify","setNameVrify","showDice","setShowDice","showNpc","setShowNpc","showPc","setShowPc","npcSelected","setNpcSelected","numSelected","setNumSelected","init","armr","hlth","key","addMonster","setAddMonster","charName","setCharName","charInit","setCharInit","charArmr","setCharArmr","charHlth","setCharHlth","charDmge","setCharDmge","charStat","setCharStat","tableData","setTableData","healthValue","setHealthValue","loadTable","table__data","addToTableData","newEntry","i","singleMonster","session_id","finalArr","sortTableData","updateTableData","newData","set","stringify","arr","unsorted","sort","a","b","parseFloat","rollInitiative","dex","initiative","Math","floor","random","newInitValue","setNewInitValue","updateInitTarget","setUpdateInitTarget","showModal","setShowModal","monsterLoaded","setMonsterLoaded","isMonsterManual","setIsMonsterManual","monsterManual","setMonsterManual","handleGroupChange","event","target","handleLoginSubmit","exists","handleGroupVerify","choice","created","Date","sidebarHandler","e","boolean","npcChangeHandler","numChangeHandler","loadMonsterStats","selectedNPC","filter","newMonsterDext","dexterity","newMonsterInit","newMonsterName","newMonsterArmr","armor_class","newMonsterHlth","hit_points","newMonster","dmge","type","handleCharNameChange","handleCharInitChange","handleCharArmrChange","handleCharHlthChange","addNewChar","newCharacter","parseInt","handleValueChange","handleHealthButton","tableArray","map","indexOf","update","handleDmgeButton","handleDeathButton","splice","handleInitUpdate","console","log","handleNewInit","submitNewInit","finalArray","handleLoadStats","monster","bool","closeModal","banner","className","button","props","onClick","clicked","class","title","input","placeholder","text","onChange","changed","onKeyPress","enter","Login","useContext","Input","Button","Confirm","MainBody","DiceRoller","changeNumDice","setState","numDice","changeNumSides","numSides","changeModifier","modifier","rollDice","axios","state","response","details","split","result","total","line1","line2","join","replace","line3","numDiceArray","this","classname","htmlFor","id","slice","num","Component","MonsterInput","options","isSearchable","min","max","PlayerInput","Accordion","Sidebar","TableRow","loadStats","healed","attacked","killed","CombatTable","char","Aux","StyledBackdrop","styled","div","backdrop","show","Title","h2","Sub","p","Row","Attr","span","Data","Desc","HR","hr","MonsterModalContent","stats","size","subtype","alignment","hit_dice","speed","walk","fly","swim","strength","constitution","intelligence","wisdom","charisma","proficiencies","length","proficiency","save","includes","skll","damage_vulnerabilities","damage_resistances","damage_immunities","condition_immunities","cond","senses","passive_perception","darkvision","blindsight","truesight","tremorsense","languages","challenge_rating","xp","special_abilities","ability","desc","actions","action","legendary_actions","InitiativeModalContent","StyledModal","Modal","memo","Backdrop","style","transform","opacity","App","Banner","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e30602b.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n\tapiKey: process.env.REACT_APP_API_KEY,\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\n\tappId: process.env.REACT_APP_APP_ID,\n\tmeasurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useState, useEffect } from \"react\";\nimport Firebase from \"./Firebase\";\n\nconst db = Firebase.firestore();\n\nconst keygen = require(\"keygenerator\");\n\nconst Context = React.createContext({});\n\nconst Provider = ({ children }) => {\n\t// *** Firestore Data *** //\n\n\tconst [monsterNamesArray, setMonsterNamesArray] = useState([]);\n\tconst [monsterStatsArray, setMonsterStatsArray] = useState([]);\n\tconst [monsterOptions, setMonsterOptions] = useState([]);\n\n\tconst fetchFirestore = () => {\n\t\tdb.collection(\"srd__monsters\")\n\t\t\t.doc(\"monster__names\")\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tconst tempArr = doc.data().namesArray;\n\t\t\t\tsetMonsterNamesArray(tempArr);\n\t\t\t});\n\t\tdb.collection(\"srd__monsters\")\n\t\t\t.doc(\"monster__stats\")\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tconst arr1 = doc.data().monsterData;\n\t\t\t\tconst arr2 = [];\n\t\t\t\tarr1.forEach((el) => arr2.push(JSON.parse(el)));\n\t\t\t\tsetMonsterStatsArray(arr2);\n\t\t\t});\n\t};\n\n\tconst createMonsterOptions = () => {\n\t\tlet arr1 = [...monsterNamesArray];\n\t\tlet arr2 = [];\n\t\tarr1.forEach((el) => arr2.push({ label: el.name, value: el.index }));\n\t\tsetMonsterOptions(arr2);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchFirestore();\n\t}, []);\n\n\t// *** Login *** //\n\n\tconst [groupName, setGroupName] = useState(\"\");\n\tconst [groupExst, setGroupExst] = useState(false);\n\tconst [nameEntrd, setNameEntrd] = useState(false);\n\tconst [nameVrify, setNameVrify] = useState(false);\n\n\tconst handleGroupChange = (event) => setGroupName(event.target.value);\n\n\tconst handleLoginSubmit = () => {\n\t\tif (groupName) {\n\t\t\tdb.collection(\"table__groups\")\n\t\t\t\t.doc(groupName)\n\t\t\t\t.get()\n\t\t\t\t.then((doc) => (doc.exists ? setGroupExst(true) : null));\n\t\t\tsetNameEntrd(true);\n\t\t}\n\t};\n\n\tconst handleGroupVerify = (el) => {\n\t\tconst choice = el.target.value;\n\t\tconst exists = groupExst;\n\t\tif (choice === \"yes\" && exists === true) {\n\t\t\tsetNameVrify(true);\n\t\t\tcreateMonsterOptions();\n\t\t\tloadTable();\n\t\t} else if (choice === \"yes\" && exists === false) {\n\t\t\tsetNameVrify(true);\n\t\t\tdb.collection(\"table__groups\")\n\t\t\t\t.doc(groupName)\n\t\t\t\t.set({ created: new Date() });\n\t\t\tcreateMonsterOptions();\n\t\t} else if (choice === \"no\") {\n\t\t\tsetNameEntrd(null);\n\t\t\tsetGroupExst(false);\n\t\t\tsetGroupName(\"\");\n\t\t}\n\t};\n\n\t// *** Sidebar Toggle *** //\n\n\tconst [showDice, setShowDice] = useState(false);\n\tconst [showNpc, setShowNpc] = useState(false);\n\tconst [showPc, setShowPc] = useState(false);\n\n\tconst sidebarHandler = (e) => {\n\t\tconst target = e.target.value;\n\t\tlet boolean;\n\t\tswitch (target) {\n\t\t\tcase \"dice\":\n\t\t\t\tboolean = !showDice;\n\t\t\t\tsetShowDice(boolean);\n\t\t\t\tsetShowNpc(false);\n\t\t\t\tsetShowPc(false);\n\t\t\t\tbreak;\n\t\t\tcase \"monster\":\n\t\t\t\tboolean = !showNpc;\n\t\t\t\tsetShowDice(false);\n\t\t\t\tsetShowNpc(boolean);\n\t\t\t\tsetShowPc(false);\n\t\t\t\tbreak;\n\t\t\tcase \"players\":\n\t\t\t\tboolean = !showPc;\n\t\t\t\tsetShowDice(false);\n\t\t\t\tsetShowNpc(false);\n\t\t\t\tsetShowPc(boolean);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t// *** Dice Roller *** //\n\n\t// *** Add Monster *** //\n\n\tconst [npcSelected, setNpcSelected] = useState(null);\n\tconst [numSelected, setNumSelected] = useState(1);\n\tconst [addMonster, setAddMonster] = useState({\n\t\tinit: \"\",\n\t\tname: \"\",\n\t\tarmr: \"\",\n\t\thlth: \"\",\n\t\tkey: \"\",\n\t});\n\n\tconst npcChangeHandler = (event) => setNpcSelected(event.value);\n\n\tconst numChangeHandler = (event) => setNumSelected(event.target.value);\n\n\tconst loadMonsterStats = () => {\n\t\tif (npcSelected && numSelected) {\n\t\t\tconst tempArr = [...monsterStatsArray];\n\t\t\tconst selectedNPC = tempArr.filter((el) => el.index === npcSelected);\n\t\t\tconst newMonsterDext = selectedNPC[0].dexterity;\n\t\t\tconst newMonsterInit = rollInitiative(newMonsterDext);\n\t\t\tconst newMonsterName = selectedNPC[0].name;\n\t\t\tconst newMonsterArmr = selectedNPC[0].armor_class;\n\t\t\tconst newMonsterHlth = selectedNPC[0].hit_points;\n\t\t\tconst newMonsterKey = keygen.session_id();\n\t\t\tconst newMonster = {\n\t\t\t\tinit: newMonsterInit,\n\t\t\t\tname: newMonsterName,\n\t\t\t\tarmr: newMonsterArmr,\n\t\t\t\thlth: newMonsterHlth,\n\t\t\t\tdmge: newMonsterHlth,\n\t\t\t\ttype: \"monster\",\n\t\t\t\tkey: newMonsterKey,\n\t\t\t};\n\t\t\t// setAddMonster(newMonster);\n\t\t\taddToTableData(newMonster);\n\t\t\tsetAddMonster(newMonster);\n\t\t}\n\t};\n\n\t// *** Add Player *** //\n\n\tconst [charName, setCharName] = useState(\"\");\n\tconst [charInit, setCharInit] = useState(\"\");\n\tconst [charArmr, setCharArmr] = useState(\"\");\n\tconst [charHlth, setCharHlth] = useState(\"\");\n\tconst [charDmge, setCharDmge] = useState(\"\");\n\tconst [charStat, setCharStat] = useState({});\n\n\tconst handleCharNameChange = (event) => setCharName(event.target.value);\n\n\tconst handleCharInitChange = (event) => setCharInit(event.target.value);\n\n\tconst handleCharArmrChange = (event) => setCharArmr(event.target.value);\n\n\tconst handleCharHlthChange = (event) => {\n\t\tsetCharHlth(event.target.value);\n\t\tsetCharDmge(event.target.value);\n\t};\n\n\tconst addNewChar = () => {\n\t\tif (charName && charInit && charArmr && charHlth) {\n\t\t\tconst newCharacter = {\n\t\t\t\tinit: parseInt(charInit),\n\t\t\t\tname: charName,\n\t\t\t\tarmr: parseInt(charArmr),\n\t\t\t\thlth: parseInt(charHlth),\n\t\t\t\tdmge: parseInt(charDmge),\n\t\t\t\ttype: \"player\",\n\t\t\t\tkey: keygen.session_id(),\n\t\t\t};\n\t\t\taddToTableData(newCharacter);\n\t\t\tsetCharStat(newCharacter);\n\t\t}\n\t};\n\n\t// *** Combat Table *** //\n\n\tconst [tableData, setTableData] = useState([]);\n\tconst [healthValue, setHealthValue] = useState(0);\n\n\tconst loadTable = () => {\n\t\tdb.collection(\"table__groups\")\n\t\t\t.doc(groupName)\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tlet arr1 = doc.data().table__data;\n\t\t\t\tlet arr2 = arr1 ? [...JSON.parse(arr1)] : [];\n\t\t\t\tsetTableData(arr2);\n\t\t\t});\n\t};\n\n\tconst addToTableData = (newEntry) => {\n\t\tconst tempArr = [...tableData];\n\t\tfor (let i = 0; i < numSelected; i++) {\n\t\t\tconst singleMonster = { ...newEntry };\n\t\t\tsingleMonster.key = keygen.session_id();\n\t\t\ttempArr.push(singleMonster);\n\t\t}\n\t\tconst finalArr = sortTableData(tempArr);\n\t\tsetTableData(finalArr);\n\t\tupdateTableData(finalArr);\n\t\tsetNumSelected(1);\n\t\tsetCharName(\"\");\n\t};\n\n\tconst updateTableData = (newData) => {\n\t\tsetTableData(newData);\n\t\tdb.collection(\"table__groups\")\n\t\t\t.doc(groupName)\n\t\t\t.set({ table__data: JSON.stringify(newData) });\n\t};\n\n\tconst sortTableData = (arr) => {\n\t\tlet unsorted = [...arr];\n\t\tunsorted.sort((a, b) => parseFloat(b.init) - parseFloat(a.init));\n\t\treturn unsorted;\n\t};\n\n\tconst rollInitiative = (dex) => {\n\t\tlet initiative = Math.floor(Math.random() * 20) + 1;\n\t\tif (dex === 1) {\n\t\t\tinitiative -= 5;\n\t\t} else if (dex === 2 || 3) {\n\t\t\tinitiative -= 4;\n\t\t} else if (dex === 4 || 5) {\n\t\t\tinitiative -= 3;\n\t\t} else if (dex === 6 || 7) {\n\t\t\tinitiative -= 2;\n\t\t} else if (dex === 8 || 9) {\n\t\t\tinitiative -= 1;\n\t\t} else if (dex === 12 || 13) {\n\t\t\tinitiative += 1;\n\t\t} else if (dex === 14 || 15) {\n\t\t\tinitiative += 2;\n\t\t} else if (dex === 16 || 17) {\n\t\t\tinitiative += 3;\n\t\t} else if (dex === 18 || 19) {\n\t\t\tinitiative += 4;\n\t\t} else if (dex === 20 || 21) {\n\t\t\tinitiative += 5;\n\t\t} else if (dex === 22 || 23) {\n\t\t\tinitiative += 6;\n\t\t} else if (dex === 24 || 25) {\n\t\t\tinitiative += 7;\n\t\t} else if (dex === 26 || 27) {\n\t\t\tinitiative += 8;\n\t\t} else if (dex === 28 || 29) {\n\t\t\tinitiative += 9;\n\t\t} else if (dex === 30) {\n\t\t\tinitiative += 10;\n\t\t}\n\t\treturn initiative;\n\t};\n\n\tconst handleValueChange = (event) => setHealthValue(event.target.value);\n\n\tconst handleHealthButton = (target) => {\n\t\tlet tableArray = [...tableData];\n\t\tlet index = tableArray.map((e) => e.key).indexOf(target);\n\t\tlet update = tableArray[index];\n\t\tupdate.dmge = parseInt(update.dmge) + parseInt(healthValue);\n\t\ttableArray[index] = update;\n\t\tupdateTableData(tableArray);\n\t};\n\n\tconst handleDmgeButton = (target) => {\n\t\tlet tableArray = [...tableData];\n\t\tlet index = tableArray.map((e) => e.key).indexOf(target);\n\t\tlet update = tableArray[index];\n\t\tupdate.dmge = parseInt(update.dmge) - parseInt(healthValue);\n\t\ttableArray[index] = update;\n\t\tupdateTableData(tableArray);\n\t};\n\n\tconst handleDeathButton = (target) => {\n\t\tlet tableArray = [...tableData];\n\t\tlet index = tableArray.map((e) => e.key).indexOf(target);\n\t\ttableArray.splice(index, 1);\n\t\tupdateTableData(tableArray);\n\t};\n\n\t// *** Change Initiative Value *** //\n\n\tconst [newInitValue, setNewInitValue] = useState(0);\n\tconst [updateInitTarget, setUpdateInitTarget] = useState(\"\");\n\n\tconst handleInitUpdate = (target) => {\n\t\tconsole.log(target);\n\t\tsetUpdateInitTarget(target);\n\t\tsetIsMonsterManual(false);\n\t\tconst bool = !showModal;\n\t\tsetShowModal(bool);\n\t};\n\n\tconst handleNewInit = (event) => setNewInitValue(event.target.value);\n\n\tconst submitNewInit = () => {\n\t\tconsole.log(newInitValue);\n\t\tlet tableArray = [...tableData];\n\t\tlet index = tableArray.map((e) => e.key).indexOf(updateInitTarget);\n\t\tlet update = tableArray[index];\n\t\tupdate.init = parseInt(newInitValue);\n\t\ttableArray[index] = update;\n\t\tlet finalArray = sortTableData(tableArray);\n\t\tupdateTableData(finalArray);\n\t\tsetShowModal(false);\n\t};\n\n\t// *** Modal *** //\n\n\tconst [showModal, setShowModal] = useState(false);\n\tconst [monsterLoaded, setMonsterLoaded] = useState(false);\n\tconst [isMonsterManual, setIsMonsterManual] = useState(true);\n\tconst [monsterManual, setMonsterManual] = useState({});\n\n\tconst handleLoadStats = (target) => {\n\t\tconst monster = monsterNamesArray.map((e) => e.name).indexOf(target);\n\t\tif (monster > -1) {\n\t\t\tconst bool = !showModal;\n\t\t\tsetIsMonsterManual(true);\n\t\t\tsetMonsterLoaded(bool);\n\t\t\tsetMonsterManual(monsterStatsArray[monster]);\n\t\t\tsetShowModal(bool);\n\t\t}\n\t};\n\n\tconst closeModal = () => {\n\t\tsetShowModal(false);\n\t};\n\n\treturn (\n\t\t<Context.Provider\n\t\t\tvalue={{\n\t\t\t\tmonsterNamesArray,\n\t\t\t\tmonsterStatsArray,\n\t\t\t\tmonsterOptions,\n\t\t\t\tgroupName,\n\t\t\t\tgroupExst,\n\t\t\t\tnameEntrd,\n\t\t\t\tnameVrify,\n\t\t\t\thandleGroupChange,\n\t\t\t\thandleLoginSubmit,\n\t\t\t\thandleGroupVerify,\n\t\t\t\tshowDice,\n\t\t\t\tshowNpc,\n\t\t\t\tshowPc,\n\t\t\t\tsidebarHandler,\n\t\t\t\tnpcSelected,\n\t\t\t\tnumSelected,\n\t\t\t\taddMonster,\n\t\t\t\tnpcChangeHandler,\n\t\t\t\tnumChangeHandler,\n\t\t\t\tloadMonsterStats,\n\t\t\t\tcharName,\n\t\t\t\tcharInit,\n\t\t\t\tcharArmr,\n\t\t\t\tcharHlth,\n\t\t\t\tcharStat,\n\t\t\t\thandleCharNameChange,\n\t\t\t\thandleCharInitChange,\n\t\t\t\thandleCharArmrChange,\n\t\t\t\thandleCharHlthChange,\n\t\t\t\taddNewChar,\n\t\t\t\ttableData,\n\t\t\t\thealthValue,\n\t\t\t\thandleValueChange,\n\t\t\t\thandleHealthButton,\n\t\t\t\thandleDmgeButton,\n\t\t\t\thandleDeathButton,\n\t\t\t\tnewInitValue,\n\t\t\t\tsetNewInitValue,\n\t\t\t\thandleInitUpdate,\n\t\t\t\thandleNewInit,\n\t\t\t\tsubmitNewInit,\n\t\t\t\tshowModal,\n\t\t\t\tmonsterManual,\n\t\t\t\tisMonsterManual,\n\t\t\t\tmonsterLoaded,\n\t\t\t\thandleLoadStats,\n\t\t\t\tcloseModal,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</Context.Provider>\n\t);\n};\n\nexport { Context, Provider };\n","import React from \"react\";\n\nconst banner = () => (\n\t<div className='banner'>\n\t\t<h1 className='banner__header'>\n\t\t\tDungeons <i className='fab fa-d-and-d fa-1x'></i> Dragons Game Screen\n\t\t</h1>\n\t</div>\n);\n\nexport default banner;\n","import React from \"react\";\n\nconst button = (props) => (\n\t<button\n\t\tonClick={props.clicked}\n\t\tvalue={props.value}\n\t\tclassName={props.class ? props.class : null}\n\t>\n\t\t{props.title}\n\t</button>\n);\n\nexport default button;\n","import React from \"react\";\n\nconst input = (props) => (\n\t<input\n\t\ttype={props.type}\n\t\tplaceholder={props.text}\n\t\tonChange={props.changed}\n\t\tvalue={props.value}\n\t\tonKeyPress={props.enter}\n\t/>\n);\n\nexport default input;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../AppContext\";\nimport Button from \"../Button/Button\";\nimport Input from \"../Input/Input\";\n\nconst Login = () => {\n\tconst {\n\t\tgroupName,\n\t\tnameEntrd,\n\t\tnameVrify,\n\t\thandleGroupChange,\n\t\thandleLoginSubmit,\n\t} = useContext(Context);\n\n\treturn !nameEntrd && !nameVrify ? (\n\t\t<div className='login'>\n\t\t\t<Input\n\t\t\t\ttype='text'\n\t\t\t\ttext='Enter Group Name'\n\t\t\t\tchanged={handleGroupChange}\n\t\t\t\tvalue={groupName}\n\t\t\t\t// enter={(e) => (e.key === \"Enter\" ? handleGroupChange : null)}\n\t\t\t/>\n\t\t\t<Button clicked={handleLoginSubmit} title={\"submit\"} />\n\t\t</div>\n\t) : null;\n};\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../../AppContext\";\n\nimport Button from \"../../Button/Button\";\n\nconst Confirm = (props) => {\n\tconst {\n\t\tgroupName,\n\t\tgroupExst,\n\t\tnameEntrd,\n\t\tnameVrify,\n\t\thandleGroupVerify,\n\t} = useContext(Context);\n\treturn nameEntrd && !nameVrify ? (\n\t\t<div className='login'>\n\t\t\t<p>\n\t\t\t\t{groupExst\n\t\t\t\t\t? groupName + \" exists, do you want to join?\"\n\t\t\t\t\t: groupName + \" does not exist, do you wish to create this group?\"}\n\t\t\t</p>\n\t\t\t<Button clicked={handleGroupVerify} value='yes' title='yes' />\n\t\t\t<Button clicked={handleGroupVerify} value='no' title='no' />\n\t\t</div>\n\t) : null;\n};\n\nexport default Confirm;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../AppContext\";\n\nconst MainBody = (props) => {\n\tconst { nameEntrd, nameVrify } = useContext(Context);\n\n\treturn nameEntrd && nameVrify ? (\n\t\t<div className='mainBody'>{props.children}</div>\n\t) : null;\n};\n\nexport default MainBody;\n","import React, { Component } from \"react\";\nimport Button from \"../../../../Button/Button\";\nimport axios from \"axios\";\n\nclass DiceRoller extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnumDice: 1,\n\t\t\tnumSides: 4,\n\t\t\tmodifier: 0,\n\t\t\tnumDiceArray: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n\t\t\tline1: \"[ Dice ]\",\n\t\t\tline2: \"[ Results ]\",\n\t\t\tline3: \"[ Total ]\",\n\t\t};\n\t}\n\n\tchangeNumDice = (event) =>\n\t\tthis.setState({ numDice: parseInt(event.target.value) });\n\n\tchangeNumSides = (event) =>\n\t\tthis.setState({ numSides: parseInt(event.target.value) });\n\n\tchangeModifier = (event) =>\n\t\tthis.setState({ modifier: parseInt(event.target.value) });\n\n\trollDice = () => {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t\"https://rolz.org/api/?\" +\n\t\t\t\t\tthis.state.numDice +\n\t\t\t\t\t\"d\" +\n\t\t\t\t\tthis.state.numSides +\n\t\t\t\t\t\".json\"\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tconst modifier = this.state.modifier;\n\t\t\t\tlet details = response.data.details.split(\"\");\n\t\t\t\tdetails.splice(0, 2);\n\t\t\t\tdetails.splice(-2, 2);\n\t\t\t\tconst input = response.data.input;\n\t\t\t\tconst result = response.data.result;\n\t\t\t\tconst total = parseInt(result) + modifier;\n\t\t\t\tconst line1 = input + \"+\" + modifier;\n\t\t\t\tconst line2 = details.join(\"\").replace(/ /g, \"\") + \"+\" + modifier;\n\t\t\t\tconst line3 = \"Total: \" + total;\n\t\t\t\tthis.setState({ line1: line1, line2: line2, line3: line3 });\n\t\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.props.classname}>\n\t\t\t\t<h2>Dice Roller</h2>\n\t\t\t\t<label htmlFor='numDice'>Number of Dice:</label>\n\t\t\t\t<select id='numDice' onChange={(el) => this.changeNumDice(el)}>\n\t\t\t\t\t{this.state.numDiceArray.slice(1).map((num) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<option key={num} value={num}>\n\t\t\t\t\t\t\t\t{num}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t\t<label htmlFor='numSides'>Number of Sides:</label>\n\t\t\t\t<select id='numSides' onChange={(el) => this.changeNumSides(el)}>\n\t\t\t\t\t<option value='4'>4</option>\n\t\t\t\t\t<option value='6'>6</option>\n\t\t\t\t\t<option value='8'>8</option>\n\t\t\t\t\t<option value='10'>10</option>\n\t\t\t\t\t<option value='12'>12</option>\n\t\t\t\t\t<option value='20'>20</option>\n\t\t\t\t</select>\n\t\t\t\t<label htmlFor='modifer'>Modifier</label>\n\t\t\t\t<select id='modifier' onChange={(el) => this.changeModifier(el)}>\n\t\t\t\t\t{this.state.numDiceArray.map((num) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<option key={num} value={num}>\n\t\t\t\t\t\t\t\t{num}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t\t<Button clicked={this.rollDice} title='Roll Dice' />\n\t\t\t\t<div className='diceTray'>\n\t\t\t\t\t<p>{this.state.line1}</p>\n\t\t\t\t\t<p>{this.state.line2}</p>\n\t\t\t\t\t<p>{this.state.line3}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DiceRoller;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../../../../AppContext\";\nimport Select from \"react-select\";\nimport Button from \"../../../../Button/Button\";\n\nconst MonsterInput = () => {\n\tconst {\n\t\tmonsterOptions,\n\t\tshowNpc,\n\t\tnpcChangeHandler,\n\t\tnumChangeHandler,\n\t\tloadMonsterStats,\n\t} = useContext(Context);\n\n\treturn (\n\t\t<div className={showNpc ? \"addMonster\" : \"addMonster hidden\"}>\n\t\t\t<h2>Add Monster</h2>\n\t\t\t<Select\n\t\t\t\tclassName='addMonster__input--mon'\n\t\t\t\toptions={monsterOptions}\n\t\t\t\tonChange={npcChangeHandler}\n\t\t\t\tisSearchable={true}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName='addMonster__input--num'\n\t\t\t\ttype='number'\n\t\t\t\tmin='1'\n\t\t\t\tmax='12'\n\t\t\t\tplaceholder='How Many?'\n\t\t\t\tonChange={numChangeHandler}\n\t\t\t/>\n\t\t\t<Button clicked={loadMonsterStats} title={\"submit\"} />\n\t\t</div>\n\t);\n};\n\nexport default MonsterInput;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../../../../AppContext\";\nimport Button from \"../../../../Button/Button\";\nimport Input from \"../../../../Input/Input\";\n\nconst PlayerInput = (props) => {\n\tconst {\n\t\tshowPc,\n\t\tcharName,\n\t\tcharInit,\n\t\tcharArmr,\n\t\tcharHlth,\n\t\thandleCharNameChange,\n\t\thandleCharInitChange,\n\t\thandleCharArmrChange,\n\t\thandleCharHlthChange,\n\t\taddNewChar,\n\t} = useContext(Context);\n\n\treturn (\n\t\t<div className={showPc ? \"addPc\" : \"addPc hidden\"}>\n\t\t\t<h2>Add Player</h2>\n\t\t\t<Input\n\t\t\t\ttype='text'\n\t\t\t\ttext='Add Character Name...'\n\t\t\t\tchanged={handleCharNameChange}\n\t\t\t\tvalue={charName}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\ttype='number'\n\t\t\t\ttext='Add Initiative Roll...'\n\t\t\t\tchanged={handleCharInitChange}\n\t\t\t\tvalue={charInit}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\ttype='number'\n\t\t\t\ttext='Add Armor Class...'\n\t\t\t\tchanged={handleCharArmrChange}\n\t\t\t\tvalue={charArmr}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\ttype='number'\n\t\t\t\ttext='Add Hit Points...'\n\t\t\t\tchanged={handleCharHlthChange}\n\t\t\t\tvalue={charHlth}\n\t\t\t/>\n\t\t\t<Button clicked={addNewChar} title={\"submit\"} />\n\t\t</div>\n\t);\n};\n\nexport default PlayerInput;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../../../AppContext\";\nimport DiceRoller from \"./DiceRoller/DiceRoller\";\nimport MonsterInput from \"./MonsterInput/MonsterInput\";\nimport PlayerInput from \"./PlayerInput/PlayerInput\";\n\nconst Accordion = () => {\n\tconst { showDice } = useContext(Context);\n\treturn (\n\t\t<div className='accordion'>\n\t\t\t<DiceRoller classname={showDice ? \"diceRoller\" : \"diceRoller hidden\"} />\n\t\t\t<MonsterInput />\n\t\t\t<PlayerInput />\n\t\t</div>\n\t);\n};\n\nexport default Accordion;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../../AppContext\";\nimport Button from \"../../Button/Button\";\nimport Accordion from \"./Accordion/Accordion\";\n\nconst Sidebar = (props) => {\n\tconst { sidebarHandler } = useContext(Context);\n\n\treturn (\n\t\t<div className='sidebar'>\n\t\t\t<Button\n\t\t\t\tclicked={sidebarHandler}\n\t\t\t\tvalue='dice'\n\t\t\t\ttitle={<i className='fas fa-dice-d20 fa-spin'></i>}\n\t\t\t/>\n\t\t\t<Button clicked={sidebarHandler} value='monster' title='add NPC' />\n\t\t\t<Button clicked={sidebarHandler} value='players' title='add PC' />\n\t\t\t<Accordion />\n\t\t</div>\n\t);\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport Button from \"../../../Button/Button\";\n\nconst TableRow = (props) => {\n\treturn (\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t{props.type === \"player\" ? (\n\t\t\t\t\t<Button class='initBtn' clicked={props.update} title={props.init} />\n\t\t\t\t) : (\n\t\t\t\t\tprops.init\n\t\t\t\t)}\n\t\t\t</td>\n\t\t\t<td onClick={props.loadStats}>{props.name}</td>\n\t\t\t<td>{props.armr}</td>\n\t\t\t<td>\n\t\t\t\t{props.dmge}/{props.hlth}\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='number' onChange={props.changed} />\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Button\n\t\t\t\t\tclass='healBtn'\n\t\t\t\t\tclicked={props.healed}\n\t\t\t\t\ttitle={<i className='fas fa-heart'></i>}\n\t\t\t\t/>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Button\n\t\t\t\t\tclass='dmgeBtn'\n\t\t\t\t\tclicked={props.attacked}\n\t\t\t\t\ttitle={<i className='fas fa-heart-broken'></i>}\n\t\t\t\t/>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Button\n\t\t\t\t\tclass='deadBtn'\n\t\t\t\t\tclicked={props.killed}\n\t\t\t\t\ttitle={<i className='fas fa-skull-crossbones'></i>}\n\t\t\t\t/>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nexport default TableRow;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../../AppContext\";\nimport TableRow from \"./TableRow/TableRow\";\n\nconst CombatTable = () => {\n\tconst {\n\t\ttableData,\n\t\thandleInitUpdate,\n\t\thandleValueChange,\n\t\thandleHealthButton,\n\t\thandleDmgeButton,\n\t\thandleDeathButton,\n\t\thandleLoadStats,\n\t} = useContext(Context);\n\treturn (\n\t\t<div className='combatTable__container'>\n\t\t\t<table className='combatTable' id='combatTable'>\n\t\t\t\t<thead className='combatTable__header'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Init.</th>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>A.C.</th>\n\t\t\t\t\t\t<th>H.P.</th>\n\t\t\t\t\t\t<th>(+/-)</th>\n\t\t\t\t\t\t<th>Heal</th>\n\t\t\t\t\t\t<th>Damage</th>\n\t\t\t\t\t\t<th>Dead</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody id='combatTable-Body'>\n\t\t\t\t\t{tableData\n\t\t\t\t\t\t? tableData.map((char) => (\n\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\tkey={char.key}\n\t\t\t\t\t\t\t\t\ttype={char.type}\n\t\t\t\t\t\t\t\t\tupdate={() => handleInitUpdate(char.key)}\n\t\t\t\t\t\t\t\t\tinit={char.init}\n\t\t\t\t\t\t\t\t\tname={char.name}\n\t\t\t\t\t\t\t\t\tarmr={char.armr}\n\t\t\t\t\t\t\t\t\tdmge={char.dmge}\n\t\t\t\t\t\t\t\t\thlth={char.hlth}\n\t\t\t\t\t\t\t\t\tchanged={handleValueChange}\n\t\t\t\t\t\t\t\t\thealed={() => handleHealthButton(char.key)}\n\t\t\t\t\t\t\t\t\tattacked={() => handleDmgeButton(char.key)}\n\t\t\t\t\t\t\t\t\tkilled={() => handleDeathButton(char.key)}\n\t\t\t\t\t\t\t\t\tloadStats={() => handleLoadStats(char.name)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  ))\n\t\t\t\t\t\t: null}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nexport default CombatTable;\n","const Aux = (props) => props.children;\n\nexport default Aux;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledBackdrop = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tposition: fixed;\n\tz-index: 100;\n\tleft: 0;\n\ttop: 0;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst backdrop = (props) =>\n\tprops.show ? <StyledBackdrop onClick={props.clicked} /> : null;\n\nexport default backdrop;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../../AppContext\";\nimport Aux from \"../../../HOC/Aux\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h2`\n\tfont-size: 4rem;\n\tmargin-bottom: 1rem;\n`;\n\nconst Sub = styled.p`\n\tfont-style: italic;\n\tcolor: #666666;\n`;\n\nconst Row = styled.div`\n\tmargin-bottom: 0.5rem;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\talign-items: flex-end;\n`;\n\nconst Attr = styled.span`\n\ttext-transform: uppercase;\n\tmargin-right: 0.5rem;\n`;\n\nconst Data = styled.span`\n\ttext-transform: capitalize;\n\tcolor: #c41520;\n`;\n\nconst Desc = styled.span`\n\tfont-family: serif;\n\tfont-style: italic;\n\ttext-transform: none;\n\tcolor: #666666;\n`;\n\nconst HR = styled.hr`\n\tmargin: 1rem 0;\n\tborder: 2px solid #ffbf00;\n`;\n\nconst MonsterModalContent = () => {\n\tconst { monsterManual, monsterLoaded } = useContext(Context);\n\tconst stats = { ...monsterManual };\n\treturn (\n\t\tmonsterLoaded && (\n\t\t\t<Aux>\n\t\t\t\t<Title>{stats.name}</Title>\n\t\t\t\t<Sub>\n\t\t\t\t\t{stats.size}&nbsp;\n\t\t\t\t\t{stats.type}\n\t\t\t\t\t{stats.subtype ? \" (\" + stats.subtype + \")\" : null},&nbsp;\n\t\t\t\t\t{stats.alignment}\n\t\t\t\t</Sub>\n\t\t\t\t<HR />\n\t\t\t\t{/* Armor Class / Hit Points / Hit Dice */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tArmor Class: <Data>{stats.armor_class}</Data>\n\t\t\t\t\t</Attr>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\thit points:&nbsp;\n\t\t\t\t\t\t<Data>\n\t\t\t\t\t\t\t{stats.hit_points} ({stats.hit_dice})\n\t\t\t\t\t\t</Data>\n\t\t\t\t\t</Attr>\n\t\t\t\t</Row>\n\t\t\t\t{/* Speed */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tSpeed:&nbsp;\n\t\t\t\t\t\t{stats.speed.walk && <Data>walk {stats.speed.walk}</Data>}\n\t\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\t{stats.speed.fly && <Data>fly {stats.speed.fly}</Data>}&nbsp;&nbsp;\n\t\t\t\t\t\t{stats.speed.swim && <Data>swim {stats.speed.swim}</Data>}\n\t\t\t\t\t</Attr>\n\t\t\t\t</Row>\n\t\t\t\t<HR />\n\t\t\t\t{/* STR / CON / DEX / INT / WIS / CHA */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tSTR: <Data>{stats.strength}</Data>&nbsp;\n\t\t\t\t\t</Attr>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tCON: <Data>{stats.constitution}</Data>&nbsp;\n\t\t\t\t\t</Attr>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tDEX: <Data>{stats.dexterity}</Data>&nbsp;\n\t\t\t\t\t</Attr>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tINT: <Data>{stats.intelligence}</Data>&nbsp;\n\t\t\t\t\t</Attr>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tWIS: <Data>{stats.wisdom}</Data>&nbsp;\n\t\t\t\t\t</Attr>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tCHA: <Data>{stats.charisma}</Data>\n\t\t\t\t\t</Attr>\n\t\t\t\t</Row>\n\t\t\t\t<HR />\n\t\t\t\t{/* Proficiencies */}\n\t\t\t\t{stats.proficiencies.length > 0 && (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Attr>\n\t\t\t\t\t\t\tSavings Throws & Skills:&nbsp;\n\t\t\t\t\t\t\t{stats.proficiencies.map((el, i) => {\n\t\t\t\t\t\t\t\tconst name = el.proficiency.name;\n\t\t\t\t\t\t\t\tconst save = name.includes(\"Saving Throw:\");\n\t\t\t\t\t\t\t\tconst skll = name.includes(\"Skill:\");\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Data key={name}>\n\t\t\t\t\t\t\t\t\t\t{i > 0 && \", \"}\n\t\t\t\t\t\t\t\t\t\t{save && name.replace(\"Saving Throw: \", \"\")}\n\t\t\t\t\t\t\t\t\t\t{skll && name.replace(\"Skill: \", \"\")}+{el.value}\n\t\t\t\t\t\t\t\t\t</Data>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Attr>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\t\t\t\t{/* Damage Vulnerablities */}\n\t\t\t\t{stats.damage_vulnerabilities.length > 0 && (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Attr>\n\t\t\t\t\t\t\tdamage vulnerabilities:\n\t\t\t\t\t\t\t<Data> {stats.damage_vulnerabilities.join(\", \")}</Data>\n\t\t\t\t\t\t</Attr>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\t\t\t\t{/* Damage Resistances */}\n\t\t\t\t{stats.damage_resistances.length > 0 && (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Attr>\n\t\t\t\t\t\t\tdamage resistances:\n\t\t\t\t\t\t\t<Data> {stats.damage_resistances.join(\", \")}</Data>\n\t\t\t\t\t\t</Attr>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\t\t\t\t{/* Damage Immunities */}\n\t\t\t\t{stats.damage_immunities.length > 0 && (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Attr>\n\t\t\t\t\t\t\tdamage immunities:\n\t\t\t\t\t\t\t<Data> {stats.damage_immunities.join(\", \")}</Data>\n\t\t\t\t\t\t</Attr>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\t\t\t\t{/* Condition Immunities */}\n\t\t\t\t{stats.condition_immunities.length > 0 && (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Attr>\n\t\t\t\t\t\t\tcondition immunities:&nbsp;\n\t\t\t\t\t\t\t<Data>\n\t\t\t\t\t\t\t\t{stats.condition_immunities.map((cond, i) => {\n\t\t\t\t\t\t\t\t\treturn i > 0 ? \", \" + cond.index : cond.index;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Data>\n\t\t\t\t\t\t</Attr>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\t\t\t\t{/* Senses */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tSenses:&nbsp;\n\t\t\t\t\t\t<Data>Passive Perception {stats.senses.passive_perception}, </Data>\n\t\t\t\t\t\t{stats.senses.darkvision && (\n\t\t\t\t\t\t\t<Data>darkvision {stats.senses.darkvision}, </Data>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{stats.senses.blindsight && (\n\t\t\t\t\t\t\t<Data>blindsight {stats.senses.blindsight}, </Data>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{stats.senses.truesight && (\n\t\t\t\t\t\t\t<Data>truesight {stats.senses.truesight}, </Data>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{stats.senses.tremorsense && (\n\t\t\t\t\t\t\t<Data>tremorsense {stats.senses.tremorsense}, </Data>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Attr>\n\t\t\t\t</Row>\n\t\t\t\t{/* Languages */}\n\t\t\t\t{stats.languages.length > 0 && (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Attr>\n\t\t\t\t\t\t\tlanguages:&nbsp;\n\t\t\t\t\t\t\t<Data>{stats.languages}</Data>\n\t\t\t\t\t\t</Attr>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\t\t\t\t{/* Challenge Rating / Experience Points */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Attr>\n\t\t\t\t\t\tChallenge Rating:&nbsp;\n\t\t\t\t\t\t<Data>\n\t\t\t\t\t\t\t{stats.challenge_rating} ({stats.xp}XP)\n\t\t\t\t\t\t</Data>\n\t\t\t\t\t</Attr>\n\t\t\t\t</Row>\n\t\t\t\t<HR />\n\t\t\t\t{/* Special Abilities */}\n\t\t\t\t{stats.special_abilities && stats.special_abilities.length > 0 && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{stats.special_abilities.map((ability) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Attr key={ability.name}>\n\t\t\t\t\t\t\t\t\t\t<Data>{ability.name}: </Data>\n\t\t\t\t\t\t\t\t\t\t<Desc>{ability.desc}</Desc>\n\t\t\t\t\t\t\t\t\t</Attr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<HR />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{/* Actions */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Attr>Actions:</Attr>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t{stats.actions.map((action) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Attr key={action.name}>\n\t\t\t\t\t\t\t\t<Data>{action.name}: </Data>\n\t\t\t\t\t\t\t\t<Desc>{action.desc}</Desc>\n\t\t\t\t\t\t\t</Attr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Row>\n\t\t\t\t{/* Legendary Actions */}\n\t\t\t\t{stats.legendary_actions && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<HR />\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Attr>Legendary Actions</Attr>\n\t\t\t\t\t\t\t<Desc>\n\t\t\t\t\t\t\t\tThis creature can take 3 legendary actions, choosing from the\n\t\t\t\t\t\t\t\toptions below. Only one legendary action option can be used at a\n\t\t\t\t\t\t\t\ttime and only at the end of another creature's turn. The\n\t\t\t\t\t\t\t\tcreature regains spent legendary actions at the start of its\n\t\t\t\t\t\t\t\tturn.\n\t\t\t\t\t\t\t</Desc>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{stats.legendary_actions.map((action) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Attr key={action.name}>\n\t\t\t\t\t\t\t\t\t\t<Data>{action.name}: </Data>\n\t\t\t\t\t\t\t\t\t\t<Desc>{action.desc}</Desc>\n\t\t\t\t\t\t\t\t\t</Attr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Aux>\n\t\t)\n\t);\n};\n\nexport default MonsterModalContent;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../../AppContext\";\n\nconst InitiativeModalContent = () => {\n\tconst { handleNewInit, submitNewInit } = useContext(Context);\n\treturn (\n\t\t<div className='initiative_modal'>\n\t\t\t<span>Enter new initiative value:</span>\n\t\t\t<input onChange={handleNewInit} />\n\t\t\t<button onClick={submitNewInit}>Submit</button>\n\t\t</div>\n\t);\n};\n\nexport default InitiativeModalContent;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../AppContext\";\nimport Aux from \"../../HOC/Aux\";\nimport Backdrop from \"../Backdrop/Backdrop\";\nimport styled from \"styled-components\";\nimport MonsterModalContent from \"./ModalContent/MonsterModalContent\";\nimport InitiativeModalContent from \"./ModalContent/InitiativeModalContent\";\n\nconst StyledModal = styled.div`\n\tposition: fixed;\n\tz-index: 500;\n\tbackground-color: white;\n\twidth: 90%;\n\tmax-height: 90%;\n\tborder: 1px solid #ccc;\n\tbox-shadow: 1px 1px 1px black;\n\tpadding: 16px;\n\tleft: 5%;\n\ttop: 5%;\n\tbox-sizing: border-box;\n\toverflow-y: auto;\n\ttransition: all 0.6s ease-out;\n\t@media only screen and (min-width: 600px) {\n\t\twidth: 600px;\n\t\tleft: calc(50% - 300px);\n\t}\n`;\n\nconst Modal = React.memo((props) => {\n\tconst { showModal, closeModal, isMonsterManual } = useContext(Context);\n\n\treturn (\n\t\t<Aux>\n\t\t\t<Backdrop show={showModal} clicked={closeModal} />\n\t\t\t<StyledModal\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform: showModal ? \"translateY(0)\" : \"translateY(-100vh)\",\n\t\t\t\t\topacity: showModal ? \"1\" : \"0\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{isMonsterManual ? <MonsterModalContent /> : <InitiativeModalContent />}\n\t\t\t</StyledModal>\n\t\t</Aux>\n\t);\n});\n\nexport default Modal;\n","import React from \"react\";\nimport { Provider } from \"./AppContext\";\nimport Banner from \"./Components/Banner/Banner\";\nimport Login from \"./Components/Login/Login\";\nimport Confirm from \"./Components/Login/Confirm/Confirm\";\nimport MainBody from \"./Components/MainBody/MainBody\";\nimport Sidebar from \"./Components/MainBody/Sidebar/Sidebar\";\nimport CombatTable from \"./Components/MainBody/CombatTable/CombatTable\";\nimport Modal from \"./Components/Modal/Modal\";\n\nimport \"./SCSS/main.scss\";\n\nconst App = () => {\n\treturn (\n\t\t<Provider>\n\t\t\t<Banner />\n\t\t\t<Login />\n\t\t\t<Confirm />\n\t\t\t<MainBody>\n\t\t\t\t<Sidebar />\n\t\t\t\t<CombatTable />\n\t\t\t</MainBody>\n\t\t\t<Modal />\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}